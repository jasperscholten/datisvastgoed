x_search = x_pos - 14
    y_search = y_pos - 14
    counter = 0
    while True:
        for j in range(x_search - 2 * counter, x_search + 2 * 12 + 22 + 2 + 2 * counter):
            if (self.area[(j, y_search - 2 * counter)] != 0 and self.area[(j, y_search - 2 * counter)] != 4) or (j > width or j < 0):
                return counter
        for k in range(y_search - 2 * counter, y_search + 2 * 12 + 21 + 2 + 2 * counter):
            if self.area[(x_search + 2 * 12 + 22 + 2 + 2 * counter, k)] != 0 and self.area[(x_search + 2 * 12 + 22 + 2 + 2 * counter, k)] != 4 or (k > height or k < 0):
                return counter
        for l in range(x_search - 2 * counter, x_search + 2 * 12 + 22 + 2 + 2 * counter):
            if self.area[(l, y_search + 2 * 12 + 21 + 2 + 2 * counter)] != 0 and self.area[(l, y_search + 2 * 12 + 21 + 2 + 2 * counter)] != 4 or (l > width or l < 0):
                return counter
        for m in range(y_search - 2 * counter, y_search + 2 * 12 + 21 + 2 + 2 * counter):
            if self.area[(x_search - 2 * counter, m)] != 0 and self.area[(x_search - 2 * counter, m)] != 4 or (k > height or k < 0):
                return counter
        counter += 1

        '''houses[3]["water{0}".format(counter - 1)][0] = x_pos
        houses[3]["water{0}".format(counter - 1)][1] = y_pos
        houses[3]["water{0}".format(counter - 1)][2] = x_pos + waterLength
        houses[3]["water{0}".format(counter - 1)][3] = y_pos
        houses[3]["water{0}".format(counter - 1)][4] = x_pos
        houses[3]["water{0}".format(counter - 1)][5] = y_pos + waterWidth
        houses[3]["water{0}".format(counter - 1)][6] = x_pos + waterLength
        houses[3]["water{0}".format(counter - 1)][7] = y_pos + waterWidth

        houses[0]["maison{0}".format(counter)][2] = x_pos
        houses[0]["maison{0}".format(counter)][3] = y_pos
        houses[0]["maison{0}".format(counter)][4] = x_pos + 22
        houses[0]["maison{0}".format(counter)][5] = y_pos
        houses[0]["maison{0}".format(counter)][6] = x_pos
        houses[0]["maison{0}".format(counter)][7] = y_pos + 21
        houses[0]["maison{0}".format(counter)][8] = x_pos + 22
        houses[0]["maison{0}".format(counter)][9] = y_pos + 21

        houses[1]["bungalow{0}".format(counter)][2] = x_pos
        houses[1]["bungalow{0}".format(counter)][3] = y_pos
        houses[1]["bungalow{0}".format(counter)][4] = x_pos + 20
        houses[1]["bungalow{0}".format(counter)][5] = y_pos
        houses[1]["bungalow{0}".format(counter)][6] = x_pos
        houses[1]["bungalow{0}".format(counter)][7] = y_pos + 15
        houses[1]["bungalow{0}".format(counter)][8] = x_pos + 20
        houses[1]["bungalow{0}".format(counter)][9] = y_pos + 15

        houses[2]["singlefamily{0}".format(counter)][2] = x_pos
        houses[2]["singlefamily{0}".format(counter)][3] = y_pos
        houses[2]["singlefamily{0}".format(counter)][4] = x_pos + 16
        houses[2]["singlefamily{0}".format(counter)][5] = y_pos
        houses[2]["singlefamily{0}".format(counter)][6] = x_pos
        houses[2]["singlefamily{0}".format(counter)][7] = y_pos + 16
        houses[2]["singlefamily{0}".format(counter)][8] = x_pos + 16
        houses[2]["singlefamily{0}".format(counter)][9] = y_pos + 16'''
